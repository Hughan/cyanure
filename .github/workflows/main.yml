name: Build and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]
# Alternatively, to publish when a (published) GitHub Release is created, use the following:
# on:
#   push:
#   pull_request:
#   release:
#     types:
#       - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15, windows-2019]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.2.0a1

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'
          
      - name: Install numpy 
        run: pip install numpy

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

      - name: version
        run: echo "::set-output name=version::v0.0.4"
        id: version
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ steps.version.outputs.version }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload zip archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/cyanure-0.22.4.zip
          asset_name: cyanure-0.22.4.zip
          asset_content_type: application/gzip
      - name: upload targz archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/cyanure-0.22.4.tar.gz
          asset_name: cyanure-0.22.4.tar.gz
          asset_content_type: application/gzip

  test_depencies:
    needs: [build_wheels]
    name: Smoke test for c++ depenencies on raw ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15, windows-2019]
        python-version: [ '3.6', '3.7', '3.8', '3.9', '3.10']
        exclude:
          - os: macos-10.15
            python-version: '3.10'

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: artifact
        path: dist

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Display Python version
      run: python -m pip install --find-links dist cyanure



  upload_pypi:
    needs: [build_wheels, build_sdist, test_depencies]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{secrets.PYPI_TEST}}
          repository_url: https://test.pypi.org/legacy/
